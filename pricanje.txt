

*******IVANA*********







***********************

*******KATARINA*********
Jezik Lua nastao je 1993. na Katoličkom univerzitetu u Rio de Žaneiru, i znači mesec. U okviru grupe za razvoj tehnologija u računarskoj grafici, trojica naučnika (pokazujem imena na prezentaciji), od kojih je svaki specijalizovan za različitu naučnu oblast, razvili su jezik Lua, i oni još uvek rade na njegovom održavanju i proširivanju.
20 sekundi

Prethodnici Lue, dva mala jezika zvana DEL i SOL, čija skraćenica znači sunce, što je bila direktna inspiracija za naziv Lua tj mesec, nastali su godinu dana ranije, i svrha im je bila da se ubrza unos ogromne količine numeričkih podataka.
15 sekundi

Prioriteti pri razvoju novog jezika bili su jednostavnost semantike i sintakse, opis podataka kakav je u SOLu, i portabilnost. 
7 sekundi

????? U julu 1993, Valdermar je dovršio prvu implementaciju Lue, koja je bila izuzetno jednostavna. Od tada je izašlo ukupno pet verzija sa brojnim podverzijama, koje su dodavale nove funkcionalnosti. ??????

fali nesto da poveze sa Janinim delom



***********************

*******JANA*********

Primena Lue

Lua, zbog svoje jednostavnosti i efikasnosti, ima primenu u različitim oblastima.
Obično se koristi na 3 načina: kao skript jezik u sastavu aplikacija pisanih na drugom jeziku,  zajedno sa C-om ili kao samostalan jezik.
   U praksi, ako se koristi zajedno sa C-om, onda se najveći deo programa piše u C-u, a pomoću Lue se kreiraju interfejsi laki za upotrebu. Tada se Lua importuje kao biblioteka.
   Kako bi Lua mogla samostalno da se koristi, razvijene su različite biblioteke - biblioteke za rad sa stringovima, tabelama, fajlovima,  itd. Sve one zajedno čine standardnu biblioteku Lue.

-- sledeci slajd

Sada ćemo videti neke primere korišćenja Lue kao skript jezik.
   Lua se koristi u okviru CGILue. To je alat za pravljenje dinamičkih veb stranica. 
   Lua je našla primenu u razvoju softvera zasnovanom na komponentnom programiranju. Komponente softvera se pišu u kompajliranom, statički tipiziranom jeziku, a onda se spajaju pomoću Lue, koja je efikasnija za to. I time se ubrzava proces razvoja softvera. 
    Zbog svoje efikasnosti, Lua je veoma popularna u svetu igrica, o čemu govori činjenica da je 2003. godine je proglašena najboljim jezikom za pisanje skriptova za igrice.
    Lua je korišćena i u Adobe Photoshop Lightroomu. Pomoću nje su napisane dodatne softverske komponente, kao što su npr. komponente za kreiranje različitih efekata, a  onda su integrisane sa postojećim programom. 


Podržane paradigme

Sada ću reći nešto o programskim paradigmama koje Lua podržava.
  Pošto mehanizmi Lue rade nad standardnom proceduralnom semantikom, onda se i većina Lua programa piše u skladu sa proceduralnom paradigmom.Ali u Lui postoje i mehanizmi  pomoću kojih je moguće pisati programe i u nekom drugom stilu.
   Zahvaljujući funkcijama koje su građani prvog reda (što znači da mogu da se prosleđuju kao argumenti drugih funkcija, da budu povratna vrednost druge funkcije, tj da se tretiraju kao promenljive), u Lui je moguće pisati i programe u funkcionalnom stilu. Podršku funkcionalnom programiranju daje biblioteka Lua Fun.
   Zahvaljujući konstrukcijama kakve su tabele i meta-tabele u Lui je moguće kreirati sisteme klasa i objekata. Na taj način je u Lui podržana i objektno-orijentisana paradigma. Nešto više o tabelama i meta-tabelama će vam ispričati Jovana.

    

***********************

*******JOVANA*********







***********************

*******KATARINA*********
Tokom godina, nastala su brojna okruženja za jezik Lua, koja olakšavaju razvoj veb aplikacija.
Među najpopuilarnija Lua okruženja spadaju Lapis, Sailor, Luvit i Fengari.

Lapis je po svojoj funkcionalnosti analogan Reils okruženju za Rubi i Laravel okruženju za PHP. Omogućava HTML templating, jednostavno uvođenje middleware-a, upravljanje ORM modelima i slično. 

Sailor okruženje je slično Lapisu ali uvodi naprednije funkcionalnosti poput mogućnost pisanja klijentskog koda u Lui, pomoću Lua virtuelne mašine implementirane u JavaScriptu. Još jedna prednost je što nije vezan za OpenResti, već ga je moguće izvršavati i na raznim drugim veb serverima

Luvit je okruženje za Luu, koje implementira API identičan Node.js okruženju. Asinhrone I/O operacije se oslanjaju na istu biblioteku kao u Node.js-u (libuv).

Fengari je implementacija Lua virtuelne mašine pisana u JavaScriptu. Izvršava se u veb pregledaču i omogućava izvršavanje Lua programa u tom okruženju. Lua kodu je dostupan kompletan API pregledača, uključujući i funkcije za manipulaciju DOM-a, pa može u potpunosti da zameni JavaScript pri pisanju klijentskog koda


1:20 sekundi 

***********************


*******IVANA*********







***********************
